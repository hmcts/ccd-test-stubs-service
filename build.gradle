plugins {
  id 'application'
  id 'jacoco'
  id 'com.github.ben-manes.versions' version '0.51.0'
  id 'io.spring.dependency-management' version '1.1.7'
  id 'org.owasp.dependencycheck' version '11.1.1'
  id 'org.sonarqube' version '6.0.1.5171'
  id 'org.springframework.boot' version '3.4.1'
  id 'uk.gov.hmcts.java' version '0.12.63'
}

group = 'uk.gov.hmcts.reform.ccd'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

sourceSets {
  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }

  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

tasks.withType(Test) {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  useJUnitPlatform{
    includeTags 'integration'
  }
  // set your environment variables here
  environment("WIREMOCK_SERVER_MAPPINGS_PATH", "wiremock")
}

task smoke(type: Test) {
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
  useJUnitPlatform {
    includeTags 'smoke'
  }
}

task functional(type: Test) {
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
  useJUnitPlatform {
    includeTags 'functional'
  }
}

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.required = true
    csv.required = false
    xml.outputLocation = file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

check.dependsOn integration

project.tasks['sonarqube'].dependsOn test, integration, jacocoTestReport

sonarqube {
  properties {
    property "sonar.projectName", "Reform :: ccd-test-stubs-service"
    property "sonar.projectKey", "uk.gov.hmcts.reform:ccd-test-stubs-service"
    property "sonar.jacoco.reportPaths", "${project.buildDir}/jacoco/test.exec"
    property "sonar.jacoco.itReportPath", "${project.buildDir}/jacoco/integration.exec"
    property "sonar.junit.reportPaths", "${project.buildDir}/test-results/junit-platform"
    property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.outputLocation}"
  }
}

dependencyUpdates.resolutionStrategy = {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}

apply from: './gradle/suppress.gradle'
dependencyCheck {
  suppressionFile = 'dependency-check-suppressions.xml'
}

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    name = "AzureArtifacts"
    url = uri("https://pkgs.dev.azure.com/hmcts/Artifacts/_packaging/hmcts-lib/maven/v1")
  }
}

ext {
  set('springCloudVersion', '2024.0.1')
  set('spring-framework.version', '6.2.1')
  set('spring-security.version', '6.4.2')
  set('log4j2.version', '2.24.3')
  set('jackson.version', '2.18.2')
  set('snakeyaml.version', '2.3')
  groovyVersion = '4.0.27'
  jettyVersion = '11.0.25'
  reformLogging = '6.1.9'
  tomcatVersion = '10.1.42'
  // test versions
  junit = '5.11.4'
  junitPlatform = '1.11.4'
  restAssuredVersion = '5.5.5'
}

ext.libraries = [
  junit5: [
    "org.junit.jupiter:junit-jupiter-api:${junit}",
    "org.junit.jupiter:junit-jupiter-engine:${junit}",
    "org.junit.jupiter:junit-jupiter-params:${junit}",
    "org.junit.platform:junit-platform-commons:${junitPlatform}",
    "org.junit.platform:junit-platform-engine:${junitPlatform}",
    "org.apiguardian:apiguardian-api:1.1.2"
  ]
]

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

dependencies {

  // start::CVE Vulnerability dependency overrides                                                        // MAIN PARENT DEPENDEDNCY

  implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.5'                  // wiremock-spring-boot
  implementation group: 'commons-io', name: 'commons-io', version: '2.18.0'                               // wiremock-spring-boot
  implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: tomcatVersion      // spring-boot-starter-tomcat
  implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-el', version: tomcatVersion        // spring-boot-starter-tomcat
  implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: tomcatVersion // spring-boot-starter-tomcat

  testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '3.0'

  // end::CVE Vulnerability dependency overrides                                                          // MAIN PARENT DEPENDEDNCY

  // SPRING
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap'
  implementation group: 'org.springframework.security', name: 'spring-security-crypto'
  implementation group: 'org.springframework.security', name: 'spring-security-rsa', version: '1.1.5'

  // HMCTS
  implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: reformLogging

  // JETTY
  implementation group: 'org.eclipse.jetty', name: 'jetty-server', version: jettyVersion
  implementation group: 'org.eclipse.jetty', name: 'jetty-alpn-client', version: jettyVersion
  implementation group: 'org.eclipse.jetty', name: 'jetty-alpn-java-client', version: jettyVersion
  implementation group: 'org.eclipse.jetty', name: 'jetty-alpn-java-server', version: jettyVersion
  implementation group: 'org.eclipse.jetty', name: 'jetty-util', version: jettyVersion
  implementation group: 'org.eclipse.jetty', name: 'jetty-util-ajax', version: jettyVersion
  implementation group: 'org.eclipse.jetty', name: 'jetty-xml', version: jettyVersion
  implementation group: 'org.eclipse.jetty', name: 'jetty-client', version: jettyVersion
  implementation group: 'org.eclipse.jetty', name: 'jetty-security', version: jettyVersion
  implementation group: 'org.eclipse.jetty', name: 'jetty-http', version: jettyVersion
  implementation group: 'org.eclipse.jetty', name: 'jetty-io', version: jettyVersion
  implementation group: 'org.eclipse.jetty', name: 'jetty-servlet', version: jettyVersion
  implementation group: 'org.eclipse.jetty', name: 'jetty-servlets', version: jettyVersion
  implementation group: 'org.eclipse.jetty', name: 'jetty-webapp', version: jettyVersion
  implementation group: 'org.eclipse.jetty', name: 'jetty-proxy', version: jettyVersion
  implementation group: 'org.eclipse.jetty', name: 'jetty-alpn-server', version: jettyVersion
  implementation group: 'org.eclipse.jetty', name: 'jetty-alpn-conscrypt-server', version: jettyVersion
  implementation group: 'org.eclipse.jetty', name: 'jetty-alpn-conscrypt-client', version: jettyVersion
  implementation group: 'org.eclipse.jetty.http2', name: 'http2-server', version: jettyVersion
  implementation group: 'org.eclipse.jetty.http2', name: 'http2-common', version: jettyVersion
  implementation group: 'org.eclipse.jetty.http2', name: 'http2-hpack', version: jettyVersion


  implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '10.3'
  implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.11.0'
  implementation group: 'jakarta.el', name: 'jakarta.el-api', version: '6.0.1'
  implementation group: 'net.minidev', name: 'json-smart', version: '2.5.2'
  implementation group: 'org.apache.httpcomponents.client5', name: 'httpclient5', version: '5.4.1'
  implementation group: 'org.apache.groovy', name: 'groovy-json', version: groovyVersion
  implementation group: 'org.apache.groovy', name: 'groovy', version: groovyVersion
  implementation group: 'org.apache.groovy', name: 'groovy-xml', version: groovyVersion
  implementation group: 'org.wiremock.integrations', name: 'wiremock-spring-boot', version: '3.6.0'


  testImplementation libraries.junit5
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
  testImplementation group: 'io.rest-assured', name: 'rest-assured', version: restAssuredVersion
  testImplementation group: 'io.rest-assured', name: 'json-path', version: restAssuredVersion
  testImplementation group: 'io.rest-assured', name: 'xml-path', version: restAssuredVersion

  testImplementation group: 'com.github.hmcts', name: 'fortify-client', version: '1.4.9', classifier: 'all'
  
  integrationTestImplementation sourceSets.main.runtimeClasspath
  integrationTestImplementation sourceSets.test.runtimeClasspath

  smokeTestImplementation sourceSets.main.runtimeClasspath
  smokeTestImplementation sourceSets.test.runtimeClasspath

  functionalTestImplementation sourceSets.main.runtimeClasspath
  functionalTestImplementation sourceSets.test.runtimeClasspath
}

test {
  useJUnitPlatform()
  failFast = true
}

application {
  mainClass = 'uk.gov.hmcts.reform.ccd.test.stubs.service.Application'
}

bootJar {
  archiveFileName = 'ccd-test-stubs-service.jar'

  manifest {
    attributes('Implementation-Title': project.name)
    attributes('Implementation-Version': project.version.toString())
  }
  from('wiremock/mappings') {
    into 'wiremock/mappings'
  }
}

// for cnp pipeline
task dependencyCheck(dependsOn: dependencyCheckAnalyze)

task fortifyScan(type: JavaExec)  {
  mainClass = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
  classpath += sourceSets.test.runtimeClasspath
  jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}
