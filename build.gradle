plugins {
  id 'application'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.0.10.RELEASE'
  id 'org.springframework.boot' version '2.4.4'
  id 'com.github.ben-manes.versions' version '0.20.0'
  id 'org.sonarqube' version '2.6.2'
  id 'uk.gov.hmcts.java' version '0.12.0'
}

group = 'uk.gov.hmcts.reform.ccd'
version = '0.0.1'

sourceCompatibility = 11
targetCompatibility = 11

sourceSets {
  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }

  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  useJUnitPlatform{
    includeTags 'integration'
  }
  // set your environment variables here
  environment("WIREMOCK_SERVER_MAPPINGS_PATH", "wiremock")
}

task smoke(type: Test) {
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
  useJUnitPlatform {
    includeTags 'smoke'
  }
}

task functional(type: Test) {
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
  useJUnitPlatform {
    includeTags 'functional'
  }
}

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.enabled = true
    csv.enabled = false
    xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

project.tasks['sonarqube'].dependsOn test, integration

sonarqube {
  properties {
    property "sonar.projectName", "Reform :: ccd-test-stubs-service"
    property "sonar.projectKey", "uk.gov.hmcts.reform:ccd-test-stubs-service"
    property "sonar.jacoco.reportPaths", "${project.buildDir}/jacoco/junitPlatformTest.exec"
    property "sonar.jacoco.itReportPath", "${project.buildDir}/jacoco/integration.exec"
    property "sonar.junit.reportPaths", "${project.buildDir}/test-results/junit-platform"
    property "sonar.exclusions", "**/token/*.java,**/ApplicationConfig.java,**/IdamUserInfo.java,**/ReadinessHealthIndicator.java,**/WireMockServerConfig.java,**/DynamicRoleAssignmentsResponseTransformer.java"
    property "sonar.coverage.exclusions", "**/token/*.java,**/*Controller.java,**/wiremock/extension/*.java"

  }
}

dependencyUpdates.resolutionStrategy = {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}

dependencyCheck {
  suppressionFile = 'dependency-check-suppressions.xml'
}

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url 'https://jitpack.io'
  }
}

ext {
  groovyVersion = '3.0.7'
  tomcatVersion = '9.0.54!!'
  jettyVersion = '9.4.43.v20210629'
}

ext['spring-framework.version'] = '5.3.12'
ext['spring-security.version'] = '5.4.5'
ext['log4j2.version'] = '2.17.0'

// it is important to specify logback classic and core packages explicitly as libraries like spring boot
// enforces it's own (older) version which is not recommended.
def versions = [
  junit           : '5.3.2',
  reformLogging   : '5.1.9',
  springBoot      : springBoot.class.package.implementationVersion,
  springfoxSwagger: '3.0.0'
]

configurations.all {
  resolutionStrategy {
    eachDependency { DependencyResolveDetails details ->
      if (details.requested.group in ['com.fasterxml.jackson.core', 'com.fasterxml.jackson.module', 'com.fasterxml.jackson.datatype']) {
        details.useVersion '2.11.1'
      }
    }
  }
}


dependencies {
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '3.0.1'

  compile group: 'com.google.guava', name: 'guava', version:'30.1-jre'
  compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

  compile "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}"
  compile "org.apache.tomcat.embed:tomcat-embed-el:${tomcatVersion}"
  compile "org.apache.tomcat.embed:tomcat-embed-websocket:${tomcatVersion}"

  compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.10.3'
  compile "com.fasterxml.jackson.core:jackson-databind:2.11.1"

  // CVE-2021-28170
  compile group: 'org.glassfish', name: 'jakarta.el', version: '4.0.1'

  compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-json'

  compile group: 'com.github.hmcts.java-logging', name: 'logging', version: versions.reformLogging
  compile (group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.2.7.RELEASE') {
    exclude group: 'org.springframework.security', module: 'spring-security-rsa'
  }

  // https://mvnrepository.com/artifact/com.github.tomakehurst/wiremock
  compile (group: 'com.github.tomakehurst', name: 'wiremock-jre8', version: '2.27.2')
          {
            exclude group: 'com.github.jknack', module: 'handlebars'
          }
// https://mvnrepository.com/artifact/com.github.jknack/handlebars
  implementation group: 'com.github.jknack', name: 'handlebars', version: '4.2.0'

  compile group: 'org.eclipse.jetty', name: 'jetty-server', version: jettyVersion
  compile group: 'org.eclipse.jetty', name: 'jetty-alpn-client', version: jettyVersion
  compile group: 'org.eclipse.jetty', name: 'jetty-continuation', version: jettyVersion
  compile group: 'org.eclipse.jetty', name: 'jetty-util', version: jettyVersion
  compile group: 'org.eclipse.jetty', name: 'jetty-util-ajax', version: jettyVersion
  compile group: 'org.eclipse.jetty', name: 'jetty-xml', version: jettyVersion
  compile group: 'org.eclipse.jetty', name: 'jetty-client', version: jettyVersion
  compile group: 'org.eclipse.jetty', name: 'jetty-security', version: jettyVersion
  compile group: 'org.eclipse.jetty', name: 'jetty-http', version: jettyVersion
  compile group: 'org.eclipse.jetty', name: 'jetty-io', version: jettyVersion
  compile group: 'org.eclipse.jetty.http2', name: 'http2-server', version: jettyVersion
  compile group: 'org.eclipse.jetty.http2', name: 'http2-common', version: jettyVersion

  compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: jettyVersion
  compile group: 'org.eclipse.jetty', name: 'jetty-servlets', version: jettyVersion
  compile group: 'org.eclipse.jetty', name: 'jetty-webapp', version: jettyVersion
  compile group: 'org.eclipse.jetty', name: 'jetty-proxy', version: jettyVersion
  compile group: 'org.eclipse.jetty', name: 'jetty-alpn-server', version: jettyVersion
  compile group: 'org.eclipse.jetty', name: 'jetty-alpn-conscrypt-server', version: jettyVersion
  compile group: 'org.eclipse.jetty', name: 'jetty-alpn-conscrypt-client', version: jettyVersion

  compile group: 'org.codehaus.groovy', name: 'groovy-json', version: groovyVersion
  compile group: 'org.codehaus.groovy', name: 'groovy', version: groovyVersion
  compile group: 'org.codehaus.groovy', name: 'groovy-xml', version: groovyVersion

  compile group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '7.9'
  compile group: 'org.springframework.security', name: 'spring-security-crypto', version: '5.4.5'


  // CVE-2019-10086 force update of commons-beanutils.
  compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
  compile group: 'commons-io', name: 'commons-io', version: '2.8.0'

  testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
  testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
  testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit

  testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
  testCompile(group: 'io.rest-assured', name: 'rest-assured', version: '4.3.0') {
    exclude group: 'org.apache.sling', module: 'org.apache.sling.javax.activation'
  }
  testCompile group: 'io.rest-assured', name: 'json-path', version: '4.3.0'
  testCompile(group: 'io.rest-assured', name: 'xml-path', version: '4.3.0') {
    exclude group: 'org.apache.sling', module: 'org.apache.sling.javax.activation'
  }

  testCompile group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
  testCompile 'com.github.hmcts:fortify-client:1.2.0:all'
  integrationTestCompile sourceSets.main.runtimeClasspath
  integrationTestCompile sourceSets.test.runtimeClasspath

  smokeTestCompile sourceSets.main.runtimeClasspath
  smokeTestCompile sourceSets.test.runtimeClasspath

  functionalTestCompile sourceSets.main.runtimeClasspath
  functionalTestCompile sourceSets.test.runtimeClasspath

  compile group: 'junit', name: 'junit', version: '4.13.1'

  implementation group: 'net.minidev', name: 'json-smart', version: '2.4.7'
}

test {
  useJUnitPlatform()
  failFast = true
}

mainClassName = 'uk.gov.hmcts.reform.ccd.test.stubs.service.Application'

bootJar {
  archiveName = 'ccd-test-stubs-service.jar'

  manifest {
    attributes('Implementation-Title': project.name)
    attributes('Implementation-Version': project.version.toString())
  }
  from('wiremock/mappings') {
    into 'wiremock/mappings'
  }
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:2020.0.1"
  }
}

// for cnp pipeline
task dependencyCheck(dependsOn: dependencyCheckAnalyze)

task fortifyScan(type: JavaExec)  {
  main = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
  classpath += sourceSets.test.runtimeClasspath
  jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
  // Uncomment the line below to prevent the build from failing if the Fortify scan detects issues
  //ignoreExitValue = true
}
